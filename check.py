questions = {
    "ржЕржирзБржкржорзЗрж░ ржнрж╛рж╖рж╛ржпрж╝ рж╕рзБржкрзБрж░рзБрж╖ ржХрж╛ржХрзЗ ржмрж▓рж╛ рж╣ржпрж╝рзЗржЫрзЗ?",
    "ржХрж╛ржХрзЗ ржЕржирзБржкржорзЗрж░ ржнрж╛ржЧрзНржп ржжрзЗржмрждрж╛ ржмрж▓рзЗ ржЙрж▓рзНрж▓рзЗржЦ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ?",
    "ржмрж┐ржпрж╝рзЗрж░ рж╕ржоржпрж╝ ржХрж▓рзНржпрж╛ржгрзАрж░ ржкрзНрж░ржХрзГржд ржмржпрж╝рж╕ ржХржд ржЫрж┐рж▓?",
}
for question, expected in questions.items():
    # Step 1: Retrieve relevant context
    docs = retriever.get_relevant_documents(question)
    context = "\n".join([doc.page_content for doc in docs])

    # Step 2: Ask the question
    answer = qa_chain.invoke({"context": context, "question": question})

    # Step 3: Output
    print("ЁЯзСтАНЁЯТ╗ ржкрзНрж░рж╢рзНржи:", question)
    print("тЬЕ ржкрзНрж░рждрзНржпрж╛рж╢рж┐ржд ржЙрждрзНрждрж░:", expected)
    print("ЁЯдЦ ржоржбрзЗрж▓ ржПрж░ ржЙрждрзНрждрж░:", answer.strip())
    print("-" * 60)
